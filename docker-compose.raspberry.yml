# Docker Compose otimizado para Raspberry Pi 5
# Configuracoes especificas para ARM64 e recursos limitados

services:
  cadastro-app:
    build:
      context: .
      dockerfile: Dockerfile
      # Forcar plataforma ARM64 para Raspberry Pi 5
      platforms:
        - linux/arm64
    container_name: cadastro-streamlit-rpi
    ports:
      - "8501:8501"
    volumes:
      - ./data:/app/data:rw
      - ./config:/app/config:rw
      - ./logs:/app/logs:rw
    environment:
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
      - STREAMLIT_SERVER_ENABLE_CORS=false
      - STREAMLIT_SERVER_ENABLE_XSRF_PROTECTION=false
      # Otimizacoes especificas para Raspberry Pi 5
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - STREAMLIT_SERVER_MAX_UPLOAD_SIZE=200
      - STREAMLIT_SERVER_FILE_WATCHER_TYPE=none
    restart: unless-stopped
    networks:
      - cadastro-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 60s
      timeout: 20s
      retries: 5
      start_period: 60s
    # Configuracoes de recursos otimizadas para Raspberry Pi 5
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    # Logging otimizado para SD card
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  api-server:
    build:
      context: .
      dockerfile: Dockerfile
      # Forcar plataforma ARM64 para Raspberry Pi 5
      platforms:
        - linux/arm64
    container_name: cadastro-api-rpi
    ports:
      - "5000:5000"
    volumes:
      - ./data:/app/data:rw
      - ./config:/app/config:rw
      - ./logs:/app/logs:rw
    environment:
      - FLASK_APP=api_server.py
      - FLASK_ENV=production
      # Otimizacoes especificas para Raspberry Pi 5
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    command: ["python", "api_server.py"]
    restart: unless-stopped
    networks:
      - cadastro-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 60s
      timeout: 20s
      retries: 5
      start_period: 60s
    # Configuracoes de recursos otimizadas para Raspberry Pi 5
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    # Logging otimizado para SD card
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

networks:
  cadastro-network:
    driver: bridge
    # Configuracoes de rede otimizadas para Raspberry Pi
    ipam:
      config:
        - subnet: 172.20.0.0/16 