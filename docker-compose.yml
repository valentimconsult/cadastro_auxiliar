# Docker Compose para Cadastro Streamlit - Versao Simplificada
# Compativel com Docker Compose v1 e v2 (incluindo Raspberry Pi)

version: '3.8'

services:
  # Servico PostgreSQL - Otimizado para Desktop e Raspberry Pi
  postgres:
    image: postgres:15-alpine
    container_name: cadastro_banco
    environment:
      POSTGRES_DB: cadastro_db
      POSTGRES_USER: cadastro_user
      POSTGRES_PASSWORD: cadastro_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
      # Configuracoes otimizadas para Raspberry Pi (compativel com desktop)
      POSTGRES_SHARED_BUFFERS: "256MB"
      POSTGRES_EFFECTIVE_CACHE_SIZE: "1GB"
      POSTGRES_MAINTENANCE_WORK_MEM: "128MB"
      POSTGRES_CHECKPOINT_COMPLETION_TARGET: "0.9"
      POSTGRES_WAL_BUFFERS: "32MB"
      POSTGRES_DEFAULT_STATISTICS_TARGET: "100"
      POSTGRES_MAX_CONNECTIONS: "50"
      # Configuracoes de performance
      POSTGRES_RANDOM_PAGE_COST: "1.1"
      POSTGRES_EFFECTIVE_IO_CONCURRENCY: "2"
    ports:
      - "5436:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
      - ./database/backups:/backups:rw
    restart: unless-stopped
    networks:
      - cadastro-network
    # Healthcheck simplificado
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cadastro_user -d cadastro_db -h localhost"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 20s

  cadastro-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cadastro_app
    ports:
      - "8503:8501"
    volumes:
      - ./data:/app/data:rw
      - ./config:/app/config:rw
      - ./logs:/app/logs:rw
    environment:
      STREAMLIT_SERVER_PORT: 8501
      STREAMLIT_SERVER_HEADLESS: "true"
      STREAMLIT_BROWSER_GATHER_USAGE_STATS: "false"
      STREAMLIT_SERVER_ENABLE_CORS: "false"
      STREAMLIT_SERVER_ENABLE_XSRF_PROTECTION: "false"
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: cadastro_db
      POSTGRES_USER: cadastro_user
      POSTGRES_PASSWORD: cadastro_password
      PYTHONUNBUFFERED: 1
      PYTHONDONTWRITEBYTECODE: 1
    restart: unless-stopped
    networks:
      - cadastro-network
    depends_on:
      - postgres

  api-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cadastro_api
    ports:
      - "5000:5000"
    volumes:
      - ./data:/app/data:rw
      - ./config:/app/config:rw
      - ./logs:/app/logs:rw
    environment:
      FLASK_APP: api_server.py
      FLASK_ENV: production
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: cadastro_db
      POSTGRES_USER: cadastro_user
      POSTGRES_PASSWORD: cadastro_password
      PYTHONUNBUFFERED: 1
      PYTHONDONTWRITEBYTECODE: 1
    command: ["python", "api_server.py"]
    restart: unless-stopped
    networks:
      - cadastro-network
    depends_on:
      - postgres

volumes:
  postgres_data:
    driver: local

networks:
  cadastro-network:
    driver: bridge 